@page "/FarmerAccount"
@inject NavigationManager NavManager
@using Newtonsoft.Json;

<MudAppBar Color="Color.Secondary" Fixed="false">
    <MudIconButton Icon="@Icons.Filled.ArrowBack" Color="Color.Primary" Edge="Edge.Start" />
    <MudSpacer />
    <MudText Color="Color.Dark" Typo="Typo.h6">Account</MudText>
    <MudSpacer />
</MudAppBar>

<MudImage Src="https://i.imgur.com/FF5lwCi.jpg" Alt="Farm" Elevation="25" Class="rounded-lg mx-auto pa-6 d-flex justify-center" Width="150" Height="150" />
<MudText Align="Align.Center" Typo="Typo.h5">Aspen Way</MudText>
<MudText Align="Align.Center" Typo="Typo.h6">Vicolo del Gelsomino 68, 00165 Rome Italy</MudText>

<MudDivider DividerType="DividerType.Middle" Class="my-6" />


<MudStack>
    <MudButton Variant="Variant.Text" Href="/FarmerAccount">Profile</MudButton>
    <MudDivider />
    <MudButton Variant="Variant.Text" Href="/orders">Orders</MudButton>
    <MudDivider />
    <MudButton Variant="Variant.Text" OnClick="Addresses">Address</MudButton>
    <MudDivider />
</MudStack>



<MudButton Class="mt-2" Variant="Variant.Filled" Color="Color.Inherit" Href="/">Logout</MudButton>


<MudMessageBox @ref="mbox" Title="Your Address" CancelText="Cancel">
    <MessageContent>
        Vicolo del Gelsomino 68, 00165
        <br />
        Rome Lazio
        <br />
        Italy
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">Update</MudButton>
    </YesButton>
</MudMessageBox>

@code {
    /*
    private async Task LogOutUser()
    {
        HttpClient client = new HttpClient { BaseAddress = new Uri("https://farmersmercato.azurewebsites.net/api/log-in") };

        HttpResponseMessage response = null;
        response = await client.GetAsync(client.BaseAddress);

        var data = await response.Content.ReadAsStringAsync();
        dynamic accounts = JsonConvert.DeserializeObject(data);

        foreach (var account in accounts)
        {
            if (account.loggedIn == true)
            {
               UpdateLoggedInVar(account.username, false);
            }
        }

        NavManager.NavigateTo("/");

        return;
    }

    private async Task UpdateLoggedInVar(string username, bool isLoggedIn)
        {
        HttpClient client = new HttpClient { BaseAddress = new Uri("https://farmersmercato.azurewebsites.net/api/update-loggedIn-" + username) };

        HttpResponseMessage response = null;

        var payloadString = new StringContent(System.Text.Json.JsonSerializer.Serialize(isLoggedIn), System.Text.Encoding.UTF8, System.Net.Mime.MediaTypeNames.Application.Json);

        response = await client.PutAsync(client.BaseAddress, payloadString);

    return;
    }
    */

    MudMessageBox mbox { get; set; }
    string state = "Message box hasn't been opened yet";

    private async void Addresses()
    {
        bool? result = await mbox.Show();
        state = result == null ? "Cancelled" : "Deleted!";
        StateHasChanged();
    }
}

<style>
    center {
        text-align: center
    }

    #user-nav-bar {
        visibility: hidden;
    }
</style>