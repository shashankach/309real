@page "/Account"
@inject NavigationManager NavManager
@using Newtonsoft.Json;


<MudAppBar Color="Color.Secondary" Fixed="false">
    <MudIconButton Icon="@Icons.Filled.ArrowBack" Color="Color.Primary" Edge="Edge.Start" />
    <MudSpacer />
    <MudText Color="Color.Dark" Typo="Typo.h6">Account</MudText>
    <MudSpacer />
</MudAppBar>

<MudImage Src="https://i.imgur.com/54e6tXY.png" Alt="Mony the dog" Elevation="25" Class="rounded-lg mx-auto pa-6" Width="200" Height="150" />
<MudText Align="Align.Center" Typo="Typo.h5">Your Name</MudText>
<MudText Align="Align.Center" Typo="Typo.h6">Your email</MudText>


<MudDivider DividerType="DividerType.Middle" Class="my-6" />

<MudStack>
    <MudButton Variant="Variant.Text" Href="/orders">Profile</MudButton>
    <MudDivider />
    <MudButton Variant="Variant.Text" Href="/orders">Orders</MudButton>
    <MudDivider />
    <MudButton Variant="Variant.Text" Href="/orders">Address</MudButton>
    <MudDivider />
    <MudButton Variant="Variant.Text" Href="/orders">Payment</MudButton>
    <MudDivider />
</MudStack>


<MudButton Class="mt-2" Variant="Variant.Filled" Color="Color.Inherit" Href="/">Logout</MudButton>

@code {
    /*
    private async Task LogOutUser()
    {
        HttpClient client = new HttpClient { BaseAddress = new Uri("https://farmersmercato.azurewebsites.net/api/log-in") };

        HttpResponseMessage response = null;
        response = await client.GetAsync(client.BaseAddress);

        var data = await response.Content.ReadAsStringAsync();
        dynamic accounts = JsonConvert.DeserializeObject(data);

        foreach (var account in accounts)
        {
            if (account.loggedIn == true)
            {
                UpdateLoggedInVar(account.username, false);
            }
        }

        NavManager.NavigateTo("/");

        return;
    }
    
    private async Task UpdateLoggedInVar(string username, bool isLoggedIn)
    {
        HttpClient client = new HttpClient { BaseAddress = new Uri("https://farmersmercato.azurewebsites.net/api/update-loggedIn-" + username) };

        HttpResponseMessage response = null;

        var payloadString = new StringContent(System.Text.Json.JsonSerializer.Serialize(isLoggedIn), System.Text.Encoding.UTF8, System.Net.Mime.MediaTypeNames.Application.Json);

        response = await client.PutAsync(client.BaseAddress, payloadString);

        return;
    }
    */
}

<style>
    center {
        text-align: center
    }

    #farmer-nav-bar {
        visibility: hidden;
    }
</style>