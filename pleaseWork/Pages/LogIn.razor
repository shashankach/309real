@using Models
@using Newtonsoft.Json;
@inject NavigationManager MyNavigationManager
@inject IDialogService DialogService

@page "/"

<div id="body">
<<<<<<< HEAD
    <MudStack AlignItems="AlignItems.Center" Spacing="16">
        <MudText Typo="Typo.h2">Farmer's Mercato</MudText>
        <MudTextField @bind-Value="UsernameTextValue" Label="Username" FullWidth="true" Variant="Variant.Filled"></MudTextField>
        <MudTextField @bind-Value="PasswordTextValue" Label="Password" FullWidth="true" Variant="Variant.Filled" InputType=InputType.Password></MudTextField>
        <MudButton Class="mt-2 ma-10" Variant="Variant.Filled" Size="Size.Large" Color="Color.Primary" FullWidth="true" Href="/search">LOG IN</MudButton>
    </MudStack>
        <MudText Typo="Typo.h5" Class="d-inline ">Don't have an account?</MudText>
        <MudText Typo="Typo.h5" Class="d-inline"><a Href="/sign-up"> Sign Up</a></MudText>
        @*<MudButton Variant="Variant.Outlined" Size="Size.Large" Color="Color.Primary" Href="/sign-up">Sign Up</MudButton>*@

=======
  <MudStack AlignItems="AlignItems.Center" Spacing="16">
      <MudText Typo="Typo.h2">Farmer's Mercato</MudText>
      <MudTextField @bind-Value="UsernameTextValue" Label="Username" FullWidth="true" Variant="Variant.Filled"></MudTextField>
      <MudTextField @bind-Value="PasswordTextValue" Label="Password" FullWidth="true" Variant="Variant.Filled" InputType=InputType.Password></MudTextField>
      <MudButton Class="mt-2" @onclick="SignIn" Variant="Variant.Filled" Size="Size.Large" Color="Color.Primary" FullWidth="true">LOG IN</MudButton>
      @*<MudText Typo="Typo.h6">Don't have an account?</MudText>*@
      <MudButton Variant="Variant.Outlined" Size="Size.Large" Color="Color.Primary" FullWidth="true" Href="/sign-up">Sign Up</MudButton>
  </MudStack>
>>>>>>> 3bff5cb9aaf8775409ee46c10765a2cc5ce4925b
</div>
    


@code {
    public string UsernameTextValue { get; set; }
    public string PasswordTextValue { get; set; }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<LogInDialog>("Error logging in", options);
    }

    private async Task SignIn()
    {
        HttpClient client = new HttpClient { BaseAddress = new Uri("https://farmersmercato.azurewebsites.net/api/log-in") };

        HttpResponseMessage response = null;
        response = await client.GetAsync(client.BaseAddress);

        var data = await response.Content.ReadAsStringAsync();
        dynamic accounts = JsonConvert.DeserializeObject(data);

        foreach (var account in accounts)
        {
            if (account.username == UsernameTextValue && account.password == PasswordTextValue)
            {
                if (account.farmer == true)
                {
                    MyNavigationManager.NavigateTo("/inventory");
                }
                else
                {
                    MyNavigationManager.NavigateTo("/search");
                }
                return;
            }
        }

        OpenDialog();
    }
}

<style>
    #nav-bar {
        visibility: hidden;
    }
    #body {
        text-align: center;
    }
</style>
